{
  "name": "Fantasyfootballassistant ai",
  "tagline": "An implementation of a neural network to predict NFL player performance",
  "body": "# Introduction\r\nTo be successful at fantasy football, you must have luck, a good amount of free time, or an uncanny ability to notice patterns within vast amounts of data. I don’t have any of those. This project is an attempt to redeem my current fantasy football team, and save time and frustration in my participation in future leagues. To do this, I use a neural network.\r\n\r\n# Problem Description\r\nI am fairly new to the fantasy football scene. Football has always been an interest of mine, but it wasn’t until last year that I started participating in fantasy football leagues. The first thing I noticed upon joining my first league, is there are a great number of statistics for each player. These statistics range from the obvious (number of passing completions) to the obscure (number of blocked kicks that resulted in touchdowns). The objective is to use these statistics to decide who you should add or drop from your fantasy team. The goal is to build a team of players that will outperform the players in the opposing team in the upcoming games. The players are assigned “fantasy points” as a measure of their performance each week. \r\n### \r\nDeciding which statistics to base my team management decisions on is no simple task. I often feel like I am not utilizing my full decision making potential when I just focus on a few of the stats. Neural networks can be the solution to this. They are not only great for noticing statistical patterns, they can also process a lot of data very quickly. I have created a program that pulls NFL statistics from an API and implemented a neural network that can process that data to predict player performance. \r\n\r\n# Method\r\nThe first challenge when implementing the neural network, is how do you organize the data to optimize training? Fig 1 shows a simple breakdown of the statistics.  \r\n![stoooop](https://github.com/rhettprestwich/FantasyFootballAssistant_AI/blob/master/Break%20Down.png)\r\n\r\n###\r\nThe data is added upon weekly. In order to create a consistent neural network, it would be beneficial to include as many training sets as possible. To accomplish this, I organized the data into training sets as shown in Fig 2.\r\n![Fig 2. Organization of data sets for training neural network](FantasyFootballAssistant_AI/Organization.jpg)\r\n###\r\nEach training set consisted of four weeks of a players statistics for input, and the amount of fantasy points that player earned during the week following for output. This arrangement makes the relationship between the input and output nodes one that is based in time relativity. It trains the network to predict the fantasy points a player will get, based on that players statistics from the last four weeks. This model works well for this problem as a players performance is typically patterned after their recent experience. \r\n###\r\nThe output of the data was altered slightly in order to simplify the problem and help the neural network converge. Each output is a Boolean value stating whether the player would earn more that 15 fantasy points in the upcoming week. This alteration allowed the neural network to converge easily, and was not much of a concession as our goal has been to predict which players will do well in the following week.  \r\n\r\n# Results\r\nThe results of the neural network were tested with a 25-fold cross-validation technique. The results varied depending on the number of training sets it was given. Fig 3 shows the results of the validation tests with respect to how many weeks of data it was given. \r\n![Fig 3. Neural network accuracy vs weeks given](FantasyFootballAssistant_AI/Chart.jpg)\r\n###\r\nSince the data organization model requires 5 weeks of data per training set, the network is useful for predicting player points from weeks 6 through the end of the regular season. As you can see in Fig 3. the network saw a big increase in accuracy between the first and second groups. The accuracy does not improve much beyond that, although it does continue to get more precise, as the range of accuracies throughout the cross-validations trend down.\r\n\r\n# Conclusion\r\nThe neural network performs well in fantasy football predicting capacity, granted it is given enough training sets. The model of the training sets are of importance as well. With this particular training set model, an increase in training sets did not improve the accuracy much, beyond the first group. But, that increase did have a significant improvement on the network’s precision. \r\n\r\n# Resources\r\n\t[1]\tFANN (Fast Artificial Neural Network Library), C++ neural network library - http://leenissen.dk/fann/wp/\r\n\t[2]\tC++ Rest SDK, C++ API JSON retrieval – Microsoft\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}